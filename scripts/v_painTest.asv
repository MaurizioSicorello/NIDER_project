


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% load and prepare data

[painDat, ~, imagenames] = load_image_set('bmrk3')

painDat44_ind = contains(imagenames, '44Degrees')
painDat48_ind = contains(imagenames, '48Degrees')

painDat44 = get_wh_image(painDat, painDat44_ind)
painDat48 = get_wh_image(painDat, painDat48_ind)

painDatDiff = painDat44
painDatDiff.dat = painDat48.dat - painDat44.dat;

neurosynth_feature_labels(fmri_data(ttest(painDatDiff)), 'images_are_replicates', false, 'noverbose')

atlas_obj = load_atlas('canlab2018_2mm'); % 489 regions


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% %calculate correlation matrix between all regions

% calculate dataframe of regional activations
roiTab = zeros(size(painDatDiff.dat, 2), size(atlas_obj.labels, 2));

for i=1:size(atlas_obj.labels, 2)
    
    roiTab(:,i) = extract_roi_averages(painDatDiff, select_atlas_subset(atlas_obj, i)).dat;

end

non_zero_columns = any(roiTab ~= 0, 1);
roiTab = roiTab(:, non_zero_columns);

corrMat = corr(roiTab);

lower_tri = tril(corrMat, -1);
lower_tri_array = lower_tri(lower_tri ~= 0);

mean(lower_tri_array)
std(lower_tri_array)

histogram(lower_tri_array)



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% correlation between amygdala and remaining regions

amyROI = fmri_data('..\data\masks\NIDER_AmygdalaROI.nii')

painDat.X = extract_roi_averages(painDat, amyROI).dat

regress(painDat)



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% test with emotion regulation data



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% load and prepare data

[emoregDat, ~, imagenames] = load_image_set('emotionreg')

atlas_obj = load_atlas('canlab2018_2mm'); % 489 regions


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% correlation between amygdala and remaining regions

amyROI = fmri_data('..\data\masks\NIDER_AmygdalaROI.nii')
emoregDat.X = extract_roi_averages(emoregDat, amyROI).dat
emoregDat = apply_mask(emoregDat, amyROI, 'invert')

emoregReg = regress(emoregDat)
histogram(emoregReg.t.dat(:,1))

correlations = emoregReg.t.dat(:,1) ./ sqrt(emoregReg.t.dat(:,1).^2 + 33)
mean(correlations)
std(correlations)



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% %calculate correlation matrix between all regions

compute_corr_stats(emoregDat, atlas_obj)



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% test with multimodal data

kragelDat = fmri_data('..\data\kragel2018\kragel_2018_nat_neurosci_270_subjects_test_images.nii')
kragelMetaDat = readtable('..\data\kragel2018\kragel_2018_nat_neurosci_270_subjects_test_images_metadata')

kragelMetaDat_unique = unique(kragelMetaDat);

corrOut_kragel = zeros(size(kragelMetaDat_unique, 1))

